library(broom)
library(reshape2)
library(ggplot2)
library(tidyr)
library(dplyr)
library(ggrepel)
library(plyr)
library(cowplot)
library(ggplot2)
library(ade4)
library(ggbiplot)
library(viridis)
library(devtools)
unlink("EDA-Mini-Project_Final_cache", recursive = TRUE)
unlink("EDA-Mini-Project_Final_cache", recursive = TRUE)
library(broom)
library(reshape2)
library(ggplot2)
library(tidyr)
library(dplyr)
library(ggrepel)
library(plyr)
library(cowplot)
library(ggplot2)
library(ade4)
library(ggbiplot)
library(viridis)
library(devtools)
join_members_votes <- function(year) {
a = as.character(year)
wd = gsub(" ","",paste("/Users/abc/Desktop/IUB/S670/congress/",a))
setwd(wd)
data_members <- read.csv('members.csv')
data_votes <- read.csv('votes.csv')
x <- merge(data_members,data_votes, by = 'id')
return (x)
}
merged_data_1999 = join_members_votes(1999)
join_members_votes <- function(year) {
a = as.character(year)
wd = gsub(" ","",paste("/Users/abc/Desktop/IUB/S670/Mini Project 2/congress/",a))
setwd(wd)
data_members <- read.csv('members.csv')
data_votes <- read.csv('votes.csv')
x <- merge(data_members,data_votes, by = 'id')
return (x)
}
merged_data_1999 = join_members_votes(1999)
library(broom)
library(reshape2)
library(ggplot2)
library(tidyr)
library(dplyr)
library(ggrepel)
library(plyr)
library(cowplot)
library(ggplot2)
library(ade4)
library(ggbiplot)
library(viridis)
library(devtools)
join_members_votes <- function(year) {
a = as.character(year)
wd = gsub(" ","",paste("/Users/abc/Desktop/IUB/S670/Mini_Project_2congress/",a))
setwd(wd)
data_members <- read.csv('members.csv')
data_votes <- read.csv('votes.csv')
x <- merge(data_members,data_votes, by = 'id')
return (x)
}
merged_data_1999 = join_members_votes(1999)
join_members_votes <- function(year) {
a = as.character(year)
wd = gsub(" ","",paste("/Users/abc/Desktop/IUB/S670/Mini_Project_2/congress/",a))
setwd(wd)
data_members <- read.csv('members.csv')
data_votes <- read.csv('votes.csv')
x <- merge(data_members,data_votes, by = 'id')
return (x)
}
merged_data_1999 = join_members_votes(1999)
merged_data_1999
votes_1999 = merged_data_1999[,(-1:-6)]
members_1999 = merged_data_1999[,1:6]
recode_votes = function(vote) {
if(is.na(vote)) {
return(0)
} else if(vote == "Yea") {
return(1)
} else if(vote == "Nay") {
return(-1)
} else {
return(0)
}
}
votes_numeric_1999 = apply(votes_1999,1:2 ,recode_votes)
out_prcomp = prcomp(votes_numeric_1999)
out_prcomp
plot(out_prcomp$sdev^2 / sum(out_prcomp$sdev^2))
members_and_scores_1999 = data.frame(members_1999, out_prcomp$x)
ggplot(members_and_scores_1999, aes(x = PC1, y = PC2,var.axes = TRUE)) + geom_point(aes(color = party)) + geom_text_repel(aes(label = last_name)) + geom_abline(aes(slope = -150, intercept = -6.5), linetype= "dashed")
merged_data_2009 = join_members_votes(2009)
merged_data_2009
votes_2009 = merged_data_2009[,(-1:-6)]
members_2009 = merged_data_2009[,1:6]
votes_numeric_2009 = apply(votes_2009,1:2 ,recode_votes)
out_prcomp = prcomp(votes_numeric_2009)
out_prcomp
plot(out_prcomp$sdev^2 / sum(out_prcomp$sdev^2))
members_and_scores_2009 = data.frame(members_2009, out_prcomp$x)
ggplot(members_and_scores_2009, aes(x = PC1, y = PC2)) + geom_point(aes(color = party)) + geom_text_repel(aes(label = last_name))  + geom_abline(aes(slope = -150, intercept = -6.5), linetype= "dashed")
df_pca <- data.frame()
df_mds <- data.frame()
recode_votes = function(vote) {
if(is.na(vote)) {
return(0)
} else if(vote == "Yea") {
return(1)
} else if(vote == "Nay") {
return(-1)
} else {
return(0)
}
}
for (x in 1989:2014) {
#reading the members data from each year
l1 = paste("/Users/abc/Desktop/IUB/S670/Mini_Project_2/congress/",x,"/members.csv", sep="/")
mem <- read.csv(l1)
#reading the votes data from each year
l2 = paste("/Users/abc/Desktop/IUB/S670/Mini_Project_2/congress/",x,"/votes.csv", sep="/")
vot <- read.csv(l2)
#join the dataframes based on ID of senator
joined = join(x = mem, y = vot, by = "id")
#recoding the variables
vot_num = apply(joined[c(-1:-6)], 1:2, recode_votes)
#finding PCA
prc <- prcomp(vot_num,scale.=FALSE)
test <- data.frame(prc$x[,1:2])
test$party <- joined$party
test$year <- x
test$name <- paste(joined$first_name, joined$last_name)
df_pca <- rbind(df_pca,test)
#finding Euclidean Distance
d <- dist(vot_num)
mds_val <- cmdscale(d,k=2)
mds_transformed <- data.frame(mds_val)
mds_transformed$party <- joined$party
mds_transformed$year <- x
mds_transformed$name <- paste(joined$first_name, joined$last_name)
df_mds <- rbind(df_mds,mds_transformed)
}
df_pca[df_pca$party=="ID",3] <- "I"
df_mds[df_mds$party=="ID",3] <- "I"
head(df_pca)
head(df_mds)
